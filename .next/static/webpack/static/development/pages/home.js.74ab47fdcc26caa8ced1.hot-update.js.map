{"version":3,"file":"static/webpack/static/development/pages/home.js.74ab47fdcc26caa8ced1.hot-update.js","sources":["webpack:///./components/ResultCard.js","webpack:///./pages/home.js"],"sourcesContent":["/* Third Party */\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport React from 'react'\nimport { Row, Col } from 'react-styled-flexboxgrid'\n\nconst ResultCardContainer = styled.div`\n    width: 20rem;\n    height: 20rem;\n    margin: 1rem;\n    padding: 1rem;\n`\n\nconst ResultCardBody = styled.div`\n    border-radius: 0.2rem;\n    margin: 1rem;\n    padding: 0rem;\n    position: absolute;\n`\n\nconst ResultGif = styled.img`\n    border-radius: 0.2rem;\n    opacity: 1;\n\n    &:hover {\n        cursor: pointer;\n        opacity: 0.6;\n    }\n`\nconst Favorite = styled.div`\n    color: magenta;\n    opacity: 1;\n    text-align: right;\n\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nexport default class ResultCard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            favorited: false\n        }\n    }\n\n    handleFavoritesUpdate = () => {\n        this.props.updateFavorites(this.props.gif)\n        this.setState({\n            favorited: !this.state.favorited\n        })\n    }\n\n    render () {\n        const { gif, favorited } = this.props\n        const { handleFavoritesUpdate } = this\n        const { isFavorite } = this.state\n        const gifUrl = gif.images.fixed_width_downsampled.url\n        return (\n            <ResultCardContainer>\n                <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n                rel=\"stylesheet\"/>\n                <ResultCardBody> \n                    <Favorite onClick={handleFavoritesUpdate}>\n                        { favorited \n                            ? <i className='material-icons'>favorite</i>\n                            : <i className='material-icons'>favorite_border</i>\n                        }\n                    </Favorite>\n                    <ResultGif src={gifUrl}></ResultGif>\n                </ResultCardBody>\n            </ResultCardContainer>\n        )\n    }\n}\n\nResultCard.defaultProps = {\n   gif: {},\n   updateFavorites: () => {},\n   isFavorite: false\n}\n\nResultCard.propTypes = {\n    gif: PropTypes.object,\n    updateFavorites: PropTypes.func,\n    isFavorite: PropTypes.bool\n}","/* First party */\nimport { Component } from 'react'\nimport { Grid, Row, Col } from 'react-styled-flexboxgrid'\nimport styled from 'styled-components'\n\n/* Third party */\nimport Searchbar from '../components/Searchbar'\nimport ResultCard from '../components/ResultCard'\n\nconst Container = styled.div`\n    margin: 0 auto;\n`\n\nconst Header = styled.div`\n    color: gray;    \n    font-size: 2rem;\n    margin-top: 4rem;\n    margin-bottom: 1rem;\n    text-align: center;\n`\n\nconst Search = styled.a`\n    display: inline-block;\n    margin-right: 0.3rem;\n    color: ${props => props.isActive ? 'black' : 'gray'};\n\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nconst Favorites = styled(Search)`\n    margin-right: 0rem;  \n    margin-left: 0.8rem;\n`\n\nconst Theme = styled(Grid)`\n    font-family: 'NeueHaasUnicaPro-Regular';\n`\nconst apiKey = 'G3kX7Y9C74tjpHZadKuIGqjwLrCmfZnU'\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            home: true,\n            searchTerm: '',\n            results: [],\n            favorites: [],\n        }\n    }\n\n    handleSearchTermChange = (event) => {\n        this.setState({\n          searchTerm: event.target.value\n        })\n      }    \n\n    handleSearchbarSubmit = (searchTerm) => {\n        console.log('in handlesubmit: ', searchTerm)\n        let urlRequest = `http://api.giphy.com/v1/gifs/search?q=${this.state.searchTerm}&api_key=${apiKey}&limit=50`\n        fetch(urlRequest)\n            .then(res => res.json())\n            .then(results => {\n                const resultsArray = results.data\n                this.setState({\n                    results: resultsArray\n                })\n            })\n    }\n\n    handlePageToggle = () => {\n        this.setState({\n            home: !this.state.home\n        })\n    }\n\n    handleFavoritesUpdate = (gif) => {\n        this.setState({\n            favorites: [...this.state.favorites, gif]\n        })\n        console.log('favs: ', this.state.favorites)\n    }\n    \n    render () {\n        const { searchTerm, results, favorites, home } = this.state\n        const {\n            handleSearchTermChange,\n            handleSearchbarSubmit,\n            handlePageToggle,\n            handleFavoritesUpdate\n        } = this\n        return (\n            <Container>\n                <Header>\n                    <Search isActive={home} onClick={handlePageToggle}> search </Search> .\n                    <Favorites isActive={!home} onClick={handlePageToggle}> favorites </Favorites>\n                </Header>\n                { home \n                ? <Theme>\n                    <Row center='xs'>\n                        <Col xs={6}>\n                            <Searchbar \n                                searchTerm={searchTerm} \n                                onChange={handleSearchTermChange}\n                                onSubmit={handleSearchbarSubmit} />\n                        </Col>\n                    </Row>\n                    <Row center='xs'>\n                        { console.log('resultssss: ', results)}\n                        { results.map(result => {\n                            return (\n                                <Col key={result.id}>\n                                    <ResultCard \n                                        gif={result}\n                                        updateFavorites={handleFavoritesUpdate}\n                                    />\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                </Theme>\n                : <Theme>\n                    <Row center='xs'>\n                        { console.log('favorites: ', favorites)}\n                        { favorites.map(fav => {\n                            return (\n                                <Col key={fav.id}>\n                                    <ResultCard \n                                        gif={fav}\n                                        updateFavorites={handleFavoritesUpdate}\n                                        isFavorite={true}\n                                    />\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                </Theme>\n                }\n            </Container>\n        )\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAOA;AASA;AACA;AASA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAXA;AACA;AADA;AAFA;AAKA;AACA;;;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAnCA;AACA;AADA;AAsCA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAIA;AAQA;AAGA;AAAA;AAOA;AAKA;AAGA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAWA;AACA;AADA;AAGA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AA5BA;AA8BA;AACA;AADA;AAGA;AACA;AAlCA;AAoCA;AACA;AADA;AACA;AAEA;AACA;AACA;AAvCA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AAipGA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}